{"version":3,"sources":["./src/app/shared/components/meta/meta.component.styl.shim.ngstyle.js.pre-build-optimizer.js","./src/app/shared/components/meta/meta.component.ngfactory.js.pre-build-optimizer.js","./src/app/shared/components/meta/meta.component.ts","./src/app/shared/pipes/seconds.pipe.ts"],"names":["_l","core","RenderType_MetaComponent","encapsulation","styles","data","__webpack_require__","d","__webpack_exports__","MetaComponent","titleService","metaService","this","title","description","keywords","prototype","ngOnInit","setTitle","updateTag","name","content","SecondsPipe","transform","milliseconds","isSeconds","hours","Math","floor","getHours","minutes","getMinutes","seconds","getSeconds","result","padNumber","number","length","string","toString"],"mappings":"sDAMA,wECOM,SAA+BA,GAAM,OAAOC,EAAA,IAAQ,KAAO,KAAM,OAHvE,IACIC,EAA2BD,EAAA,IAAUE,cAAe,EAAGC,SDL7C,oFCK2EC,+CCRzFC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAA,EAAA,WAWE,SAAAA,EACUC,EACAC,GADAC,KAAAF,eACAE,KAAAD,cANDC,KAAAC,MAAQ,GACRD,KAAAE,YAAc,GACdF,KAAAG,SAAW,GAqBtB,OAbEN,EAAAO,UAAAC,SAAA,WACEL,KAAKF,aAAaQ,SAASN,KAAKC,OAEhCD,KAAKD,YAAYQ,WACfC,KAAM,cACNC,QAAST,KAAKE,cAGhBF,KAAKD,YAAYQ,WACfC,KAAM,WACNC,QAAST,KAAKG,YAGpBN,EA9BA,sCCAAH,EAAAC,EAAAC,EAAA,sBAAAc,IAAA,IAIAA,EAAA,oBAAAA,KAuBA,OAnBEA,EAAAN,UAAAO,UAAA,SAAUC,EAA4BC,QAAA,IAAAA,OAAA,GAChCA,IACFD,GAAgB,KAGlB,IAAME,EA0BV,SAAkBF,GAChB,OAAOG,KAAKC,MAAMJ,EAtCO,MAWTK,CAASL,GAIjBM,EA0BV,SAAoBN,GAClB,OAAOG,KAAKC,MAAMJ,EA3CS,KAgBTO,CAFhBP,GAbuB,KAaPE,GAMVM,EA0BV,SAAoBR,GAClB,OAAOG,KAAKC,MAAMJ,EAhDS,KAqBTS,CAFhBT,GAlByB,IAkBTM,GAIVI,EAASC,EAAUL,EAAS,GAAK,IAAMK,EAAUH,EAAS,GAEhE,OAAON,EAAQS,EAAUT,EAAO,GAAK,IAAMQ,EAASA,GAExDZ,EAvBA,GAyBA,SAAAa,EAAmBC,EAAgBC,GAGjC,IAFA,IAAIC,EAAiBF,EAAOG,WAErBD,EAAOD,OAASA,GACrBC,EAAS,IAAMA,EAGjB,OAAOA","file":"0.2d025779bca247d535da.chunk.js","sourcesContent":["/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nvar styles = [\"\\n/*# sourceMappingURL=src/app/shared/components/meta/meta.component.css.map */\"];\r\nexport { styles as styles };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/meta/meta.component.styl.shim.ngstyle.js.pre-build-optimizer.js","/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nimport * as i0 from \"./meta.component.styl.shim.ngstyle\";\r\nimport * as i1 from \"@angular/core\";\r\nimport * as i2 from \"./meta.component\";\r\nimport * as i3 from \"@angular/platform-browser\";\r\nvar styles_MetaComponent = [i0.styles];\r\nvar RenderType_MetaComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_MetaComponent, data: {} });\r\nexport { RenderType_MetaComponent as RenderType_MetaComponent };\r\nexport function View_MetaComponent_0(_l) { return i1.ɵvid(2, [], null, null); }\r\nexport function View_MetaComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-meta\", [], null, null, null, View_MetaComponent_0, RenderType_MetaComponent)), i1.ɵdid(1, 114688, null, 0, i2.MetaComponent, [i3.Title, i3.Meta], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\r\nvar MetaComponentNgFactory = i1.ɵccf(\"app-meta\", i2.MetaComponent, View_MetaComponent_Host_0, { title: \"title\", description: \"description\", keywords: \"keywords\" }, {}, []);\r\nexport { MetaComponentNgFactory as MetaComponentNgFactory };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/meta/meta.component.ngfactory.js.pre-build-optimizer.js","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-meta',\r\n  templateUrl: './meta.component.html',\r\n  styleUrls: ['./meta.component.styl'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MetaComponent implements OnInit {\r\n  @Input() title = '';\r\n  @Input() description = '';\r\n  @Input() keywords = '';\r\n\r\n  constructor(\r\n    private titleService: Title,\r\n    private metaService: Meta,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.titleService.setTitle(this.title);\r\n\r\n    this.metaService.updateTag({\r\n      name: 'description',\r\n      content: this.description,\r\n    });\r\n\r\n    this.metaService.updateTag({\r\n      name: 'keywords',\r\n      content: this.keywords,\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/meta/meta.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Hours, Milliseconds, Minutes, Seconds } from '../../types';\r\n\r\nconst millisecondsInSecond = 1000;\r\nconst millisecondsInMinute = 60 * millisecondsInSecond;\r\nconst millisecondsInHour = 60 * millisecondsInMinute;\r\n\r\n@Pipe({\r\n  name: 'seconds'\r\n})\r\nexport class SecondsPipe implements PipeTransform {\r\n  transform(milliseconds: Milliseconds, isSeconds = false): string {\r\n    if (isSeconds) {\r\n      milliseconds *= 1000;\r\n    }\r\n\r\n    const hours = getHours(milliseconds);\r\n\r\n    milliseconds -= hours * millisecondsInHour;\r\n\r\n    const minutes = getMinutes(milliseconds);\r\n\r\n    milliseconds -= minutes * millisecondsInMinute;\r\n\r\n    const seconds = getSeconds(milliseconds);\r\n\r\n    const result = padNumber(minutes, 2) + ':' + padNumber(seconds, 2);\r\n\r\n    return hours ? padNumber(hours, 2) + ':' + result : result;\r\n  }\r\n}\r\n\r\nfunction padNumber(number: number, length: number): string {\r\n  let string: string = number.toString();\r\n\r\n  while (string.length < length) {\r\n    string = '0' + string;\r\n  }\r\n\r\n  return string;\r\n}\r\n\r\nfunction getHours(milliseconds: Milliseconds): Hours {\r\n  return Math.floor(milliseconds / millisecondsInHour);\r\n}\r\n\r\nfunction getMinutes(milliseconds: Milliseconds): Minutes {\r\n  return Math.floor(milliseconds / millisecondsInMinute);\r\n}\r\n\r\nfunction getSeconds(milliseconds: Milliseconds): Seconds {\r\n  return Math.floor(milliseconds / millisecondsInSecond);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/pipes/seconds.pipe.ts"],"sourceRoot":"webpack:///"}